# Version: 20250404
# Image name: quay.io/opencv-ci/opencv-docs-22.04

FROM ubuntu:22.04

RUN \
  apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    software-properties-common \
    gpg-agent curl git htop man zip unzip vim wget ncdu mc nano time \
    file \
    && \
  add-apt-repository ppa:git-core/ppa && \
  apt-get install -y --no-install-recommends git && \
  rm -rf /var/lib/apt/lists/*

RUN \
  apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    cmake build-essential \
    doxygen-latex graphviz \
    p7zip-full \
    pylint flake8 \
    python3-bs4 \
    && \
  rm -rf /var/lib/apt/lists/*

ENV EMSDK_VERSION=1.39.0-upstream
ENV EMSDK_DIR=/opt/emsdk-portable
ENV EMSDK_CACHE_DIR=/opt/build-worker/emsdk-${EMSDK_VERSION}

RUN \
  /bin/bash -c "mkdir -p ${EMSDK_DIR} && \
    cd ${EMSDK_DIR} && \
    git rev-parse HEAD || (rm -rf ./.git && git clone https://github.com/juj/emsdk.git .) && \
    git reset --hard || true && \
    git clean -f -d || true && \
    git fetch origin && \
    git checkout -B main origin/main && \
    git rev-parse HEAD && \
    ./emsdk list && \
    ./emsdk install ${EMSDK_VERSION} && \
    ./emsdk activate ${EMSDK_VERSION} && \
    source ./emsdk_env.sh && \
    mkdir -p ./.home && \
    cp -rp ./.em* ./.home/ && \
    # python script (opencv/platforms/js/build_js.py) has shebang and required hardly python
    ln -s /usr/bin/python3 /usr/bin/python"


# Install fresh Doxygen
ARG doxygen_version=doxygen-1.12.0
ARG doxygen_urlbase=https://github.com/doxygen/doxygen/releases/download/Release_1_12_0
ARG doxygen_archive=${doxygen_version}.linux.bin.tar.gz
ARG doxygen_sha1sum=c50fc71ba9b5e431f0f0f21c5dc8559f47f06007
ADD ${doxygen_urlbase}/${doxygen_archive} /opt/
RUN \
  cd /opt \
  && echo "${doxygen_sha1sum} ${doxygen_archive}" | sha1sum -c \
  && tar -xvf ${doxygen_archive} \
  && rm -rf ${doxygen_archive}
ENV PATH=/opt/${doxygen_version}/bin:${PATH}


# GitHub Actions user's UID is 1001
RUN \
  useradd ci -m -s /bin/bash -G users --uid=1001 && \
  chown -R ci:ci ${EMSDK_DIR}

USER ci

RUN \
  cd $HOME && \
  mkdir opencv opencv_contrib build && \
  git config --global --add safe.directory "*" && \
  git config --global user.email "opencv.ci" && \
  git config --global user.name "opencv.ci" && \
  git config --global pull.rebase false

# Run docker build from the root directory of the repository
COPY scripts/patch_size.py /home/ci/scripts/patch_size.py
COPY scripts/pack_docs.py /home/ci/scripts/

ENV PATH=${EMSDK_DIR}:${EMSDK_DIR}/upstream/emscripten:${EMSDK_DIR}/node/20.18.0_64bit/bin:${PATH}
ENV EMSDK=${EMSDK_DIR}
ENV EM_CONFIG=${EMSDK_DIR}/.emscripten
ENV EM_CACHE=${EMSDK_DIR}/upstream/emscripten/cache
ENV EMSDK_NODE=${EMSDK_DIR}/node/20.18.0_64bit/bin/node
ENV EMSCRIPTEN ${EMSDK_DIR}/upstream/emscripten
ENTRYPOINT bash
